trigger:
  branches:
    include:
      - develop
      - main
  paths:
    exclude:
      - /**/*.md

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: "Release"
  ${{ if endsWith( variables['Build.SourceBranchName'], 'develop' ) }}:
    baseUrl: "https://$(betaWebAppName).azurewebsites.net"
  ${{ if endsWith( variables['Build.SourceBranchName'], 'main' ) }}:
    baseUrl: "https://$(prodWebAppName).azurewebsites.net"

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: database_migration
        displayName: "Create Migrations"
        steps:
          - task: NuGetCommand@2
            displayName: "Restore NuGet Packages"
            inputs:
              command: "restore"
              restoreSolution: "**/*.sln"
              feedsToUse: "select"
              vstsFeed: "8b2a4880-f26e-4ef5-b8ed-351d2d463c75"

          - task: DotNetCoreCLI@2
            displayName: "Install Entity Framework"
            inputs:
              command: "custom"
              custom: "tool"
              arguments: "install --global dotnet-ef"
              workingDirectory: "$(System.DefaultWorkingDirectory)/backend/"

          - task: efcore-migration-script-generator-task@0
            displayName: "Create migrations"
            inputs:
              projectpath: "$(System.DefaultWorkingDirectory)/backend/HFundamentals.Sample/HFundamentals.Sample.csproj"
              databasecontexts: "ApplicationDbContext"
              startupprojectpath: "$(System.DefaultWorkingDirectory)/backend/HFundamentals.Sample/HFundamentals.Sample.csproj"
              targetfolder: "$(System.DefaultWorkingDirectory)/migrations"
              configuration: "Release"
              workingDirectory: "$(System.DefaultWorkingDirectory)/backend"

          - task: PublishPipelineArtifact@1
            displayName: "Publish migrations artifacts"
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)/migrations"
              artifact: "migrations"

      - job: backend
        displayName: "Build backend"
        dependsOn: database_migration
        steps:
          - task: NuGetCommand@2
            displayName: "Restore NuGet Packages"
            inputs:
              command: "restore"
              restoreSolution: "**/*.sln"
              feedsToUse: "select"
              vstsFeed: "8b2a4880-f26e-4ef5-b8ed-351d2d463c75"

          - task: DotNetCoreCLI@2
            displayName: "Build solution"
            inputs:
              command: "build"
              configuration: $(buildConfiguration)
              workingDirectory: "$(System.DefaultWorkingDirectory)/backend"

          - task: VSTest@2
            displayName: "Run tests"
            inputs:
              testSelector: "testAssemblies"
              testAssemblyVer2: |
                **\*test*.dll
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: "$(System.DefaultWorkingDirectory)/backend"
              codeCoverageEnabled: true
              platform: "Any CPU"
              configuration: "$(buildConfiguration)"

          - task: PublishBuildArtifacts@1
            displayName: "Publish backend artifcats"
            inputs:
              PathtoPublish: "$(System.DefaultWorkingDirectory)/backend/HFundamentals.Sample/bin/Debug/net5.0/"
              ArtifactName: "backend"
              publishLocation: "Container"

      - job: frontend
        dependsOn: backend
        displayName: "Build frontend"
        steps:
          - task: NodeTool@0
            displayName: "Install Node.js"
            inputs:
              versionSpec: "10.x"

          - task: replacetokens@3
            inputs:
              targetFiles: "$(System.DefaultWorkingDirectory)/frontend/.env.prod"
              encoding: "auto"
              writeBOM: true
              actionOnMissing: "warn"
              keepToken: false
              tokenPrefix: "___"
              tokenSuffix: "___"
              useLegacyPattern: false
              enableTransforms: false
              enableTelemetry: false

          - script: npm install
            displayName: "Run intaller"
            workingDirectory: "$(System.DefaultWorkingDirectory)/frontend/"

          - script: npm run build
            displayName: "Run builder"
            workingDirectory: "$(System.DefaultWorkingDirectory)/frontend/"

          - script: npm run test
            displayName: "Run tests"
            workingDirectory: "$(System.DefaultWorkingDirectory)/frontend/"

          - task: PublishBuildArtifacts@1
            displayName: "Publish frontend artifacts"
            inputs:
              PathtoPublish: "$(System.DefaultWorkingDirectory)/frontend/dist/"
              ArtifactName: "frontend"
              publishLocation: "Container"

  - stage: release
    displayName: Deploy
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    jobs:
      - deployment: deploy_db
        displayName: "Update database (beta)"
        environment: beta_env_db
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: "Download migration artifacts"
                  inputs:
                    artifactName: "migrations"
                    downloadPath: "$(System.ArtifactsDirectory)/migrations"

                - task: SqlAzureDacpacDeployment@1
                  displayName: "Update database"
                  inputs:
                    azureConnectionType: "connectedServiceNameARM"
                    azureSubscription: "Visual Studio Enterprise (66617915-b071-43f5-b408-ccfcf9c4ab1e)"
                    AuthenticationType: "connectionString"
                    ConnectionString: "$(betaConnectionString)"
                    deployType: "sqlTask"
                    SqlFile: "$(System.ArtifactsDirectory)/migrations/ApplicationDBContext.sql"
                    IpDetectionMethod: "AutoDetect"

      - deployment: deploy_backend_beta
        displayName: "Deploy backend (beta)"
        environment: beta_env_back
        dependsOn: deploy_db
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  displayName: "Download backend artifacts"
                  inputs:
                    buildType: "current"
                    downloadType: "single"
                    artifactName: "backend"
                    downloadPath: "$(System.ArtifactsDirectory)"

                - task: SetJsonProperty@1
                  displayName: "Set connection string"
                  inputs:
                    JsonFile: "$(System.ArtifactsDirectory)/backend/appsettings.json"
                    PropertyPath: "ConnectionStrings.DefaultConnection"
                    PropertyValue: "$(betaConnectionString)"

                - task: AzureRmWebAppDeployment@4
                  displayName: "Deploy on Azure App Service"
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: "Visual Studio Enterprise (66617915-b071-43f5-b408-ccfcf9c4ab1e)"
                    appType: "webAppLinux"
                    WebAppName: "$(betaWebAppName)"
                    packageForLinux: "$(System.ArtifactsDirectory)/backend/"
                    RuntimeStack: "DOTNETCORE|5.0"

      - deployment: deploy_frontend_beta
        displayName: "Deploy frontend (beta)"
        environment: beta_env
        dependsOn: deploy_backend_beta
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  displayName: "Download frontend artifacts"
                  inputs:
                    buildType: "current"
                    downloadType: "single"
                    artifactName: "frontend"
                    downloadPath: "$(System.ArtifactsDirectory)"
                - task: AzureFileCopy@2
                  displayName: "Deploy on Azure Blob Storage"
                  inputs:
                    SourcePath: "$(System.ArtifactsDirectory)/frontend"
                    azureSubscription: "Visual Studio Enterprise (66617915-b071-43f5-b408-ccfcf9c4ab1e)"
                    Destination: "AzureBlob"
                    storage: "$(betaStorage)"
                    ContainerName: "$web"
